set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-logging'
# plugin path: ~/.tmux/plugins

# plugin install: prefix + I
# plugin update: prefix + U 
# pligin uninstall: prefix + alt + u (remove plugins not on the plugin list)

# set is alias of set
# setw is alias of setw
# set -g is used to set global options
# set -a appends values to existing settings

# Tmux prefix : ` #
unbind C-b
set -g prefix `
bind ` send-prefix

# colour
#-----------------------------------------------------------------------
DarkGray=colour237
Gray=colour239
LightGray=colour249
LightYellow=colour230
Plum=colour96
LightSkyblue=colour117
PalePurple=colour225
Jade=colour37
Black=colour16

# tmux-logging shortcut
# save pane history: M-P
# clear pane history: M-c
# screen_capture: M-p
# toggle_logging: P
# 
#+ prefix ! : break-pane
bind-key @ command-prompt -p "restruct pane with:"  "join-pane -s ':%%'"
bind-key C-@ command-prompt -p "restruct pane with:" "join-pane -h -s :'%%'"
# clear history and reset screen : prefix+ M-r
bind M-r send-keys -R \; clear-history
# change kill-window shortcut : prefix+ M-k
bind M-k confirm-before -p "kill-window #W? (y/n)" kill-window

# vim-tmux-navigator
#-----------------------------------------------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
#   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# Switch pane : Ctrl+h,j,k,l,\
#-------------------------------------#--------------------------------------
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version > 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'" 
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Split pane : prefix + -,\ at current path
#-----------------------------------------------------------------------
bind \\ split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind - split-window -v -c '#{pane_current_path}'  # Split panes vertically

# Copy & Paste
#-----------------------------------------------------------------------
# To use OS clibboard, check to be sure that `set clipboard=unnamed is located at .vimrc.

# In vim:<Up>
# It work the same way (y & p in normal mode)
# and you can use ctrl+ v to paste

# In terminal:
# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# To paste use ctrl+v, it works like vim. 

# Use vim keybindings in copy mode
setw -g mode-keys vi
unbind -T copy-mode-vi Enter
unbind -T prefix [
unbind -T copy-mode-vi 'C-r'
bind -T prefix v copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'V' send-keys -X select-line
bind-key -T copy-mode-vi 'c-v' send-keys -X rectangle-toggle


# Update default binding of `y` to use copy-pipe
unbind -T copy-mode-vi 'y'
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "pbcopy"
# # Mouse scroll to copy mode
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
# use 'p' to paste
bind-key 'p' run "pbpaste | tmux load-buffer - && tmux paste-buffer"


# Scroll halfpage : Ctrl + mouse wheel
#-----------------------------------------------------------------------
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M 
bind -T copy-mode-vi    c-wheeluppane   send-keys -X halfpage-up
bind -T copy-mode-vi    c-wheeldownpane send-keys -X halfpage-down
bind -T copy-mode-emacs c-wheeluppane   send-keys -X halfpage-up
bind -T copy-mode-emacs c-wheeldownpane send-keys -X halfpage-down

# tmux-continuum
# ln -sf <file> last
#-----------------------------------------------------------------------
# continuous session back(every 15 mins)
# automatic restore ( ~/.tmux/resurrect/ )
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'
# set -g @continuum-restore 'on'
set -g @continuum-save-interval '15' #min
# set -g @continuum-save-interval '0' #stop restore 

# tmux-resurrect : 
# save: prefix+ Ctrl-s, 
# restore: prefix+ Ctrl-r
#-----------------------------------------------------------------------
#for vim
set -g @resurrect-strategy-vim 'session'
#for neovim
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes ' "vim-> vim + SLoad" '
# set -g @resurrect-dir '~/.tmux/resurrect/

# don't rename windows automatically
set -g allow-rename off

# Status bar
#-----------------------------------------------------------------------
set -g status "on"

set -g status-interval 5

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

# Bell & Activity
# set -g monitor-bell off
# set -g bell-action any
set -g window-status-activity-style "bg=${Black},fg=${LightGray},blink"
set -g window-status-bell-style " " 
setw -g monitor-activity on

set -g status-justify left

set -g status-left "\
#[fg=$LightYellow, bg=$DarkGray]#{?client_prefix,#[bg=$Plum]#[fg=$LightYellow],} ‚ô• #S \
#{?window_zoomed_flag,üîç, } \
#[fg=$DarkGray, bg=$DarkGray]#{?client_prefix,#[fg=$Plum],}ÓÇ∞"
##[fg=$LightYellow]  #(~/dotfiles/tmux_scripts/battery.sh)  "

# continuum save interval and username
set -g status-right "\
#[fg=$LightSkyblue]‚úîÔ∏é #{continuum_status} \
#[fg=$LightYellow]‚ú¶ #(whoami)"
#[fg=$Gray, bg=$DarkGray] ÓÇ≥ %b %d %;y\
#[fg=$PalePurple] ÓÇ≥ %H:%M \

# current window 
setw -g window-status-current-format "\
#[fg=$DarkGray, bg=$Plum]ÓÇ∞\
#[fg=$LightYellow, bg=$Plum] üëÄ  \
#[fg=$LightYellow, bg=$Plum, bold] #W \
#[fg=$Plum, bg=$DarkGray]ÓÇ∞"

# all window 
setw -g window-status-format "\
#[fg=$DarkGray,bg=$Gray,noitalics]ÓÇ∞\
#[fg=$PalePurple,bg=$Gray]#{?window_bell_flag, üîî  , #I ÓÇ±}\
#[fg=$PalePurple, bg=$Gray] #W \
#[fg=$Gray, bg=$DarkGray]ÓÇ∞"

# Pane and window
#-----------------------------------------------------------------------
# Set active pane border color
set -g pane-active-border-style fg=$PalePurple 
# Set inactive pane border color
set -g pane-border-style fg=$Gray
# set -g pane-border-status off
# set -g pane-border-format '#[bold]#{pane_title}#[default]'

# Message info
set -g message-style bg=$Gray,fg=$PalePurple 

# Selection color in copy mode
set -g mode-style bg=$LightSkyblue,fg=$DarkGray 

## Writing commands inactive 
set -g message-command-style bg=$Gray,fg=$LightGray

# Pane number display (prefix+q)
set -g display-panes-active-colour $Plum 
set -g display-panes-colour $Gray

set -g window-active-style 'fg=default,bg=default'

# Clock (prefix+t)
setw -g clock-mode-colour $Jade  
setw -g clock-mode-style 12

set -g status-bg $DarkGray
set -g status-fg $LightYellow

# etc.
#-----------------------------------------------------------------------

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1 

# set -g status-keys emacs
set -g status-keys vi

set -g renumber-windows on

set -g mouse on

set -g history-limit 50000

setw -g alternate-screen on

#tmux messages are displayed for 4 seconds
set -g display-time 4000 

set -g escape-time 0

set -g assume-paste-time 1

# set -s terminal-overrides ",xterm-256color-italic:Tc"
# set -sa  terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q' # this is for the cursor shape
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"  # this is for 256 color
setw -g xterm-keys on;

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Initialize TMUX Plugin Manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
